function main=lab2ab(mdimension,npunkt)

A = [];
b = [];
Aeq = [];
beq = [];
lb = -1*ones(npunkt,mdimension);
ub = -1*lb;
OPT = optimset('Algorithm','interior-point','MaxIter',2000);
x0 = zeros(npunkt,mdimension);

X = fmincon(@distans,x0,A,b,Aeq,beq,lb,ub,@biv,OPT);
X
hold on
 for i = 1:3
     for j = 1:3
        scatter3(X(i,j),X(i,j+1), X(i,j+2), 'r', 'filled')
        
        scatter3(X(i+1,j),X(i+2,j+1),X(i+3,j+3), 'y', 'filled')
        
        
     end
 end
 hold off 
 grid on
 end





%% comments 
% %objectfunktion = summan av alla avstånd mellan punkterna (det vi ska
% %maximera)
% %bivfunfunillkor = punkter måste ligga på randen till sfären
% % n= 6;
% % m = 3;
% % for i=1:n
% %     M = zeros(n,m);
% %     point(i) = normrnd(0,1,[1 n]);
% %     point(i)/norm(point(i))
% %     M(i,:) = point(i);
% %     for k=1:n
% %         distance(k) = norm(M(i,:) - M(k,:));
% %     
% %     end
% %     
% %     
% % end
% % sum(distance);
% 
% 
% f = @(x,y,z)(x.^2+y.^2+z.^2); %def fun
% FUN = @(X)f(X(1),X(2),X(3)); %funktion som ska maximeras
% X0 = zeros(3,6)%[0,0,0]; %start
% A = []; B = []; Aeq = []; Beq= []; %linjärt
% LB = -1; %enhetssfär
% UB = 1;
% NONLCON = @(X) deal([],X(1).^2+X(2).^2+X(3).^2-1);
% OPTIONS = optimoptions('fmincon','Algorithm','Interior-point');
% dist = zeros(6);
% % for i=1:6
% %     
% % dist(i) =sum( fmincon(FUN,X0,A,B,Aeq,Beq,LB,UB,NONLCON,OPTIONS));
% % end
% 
% 
% 
% 
% 
% 
% 



